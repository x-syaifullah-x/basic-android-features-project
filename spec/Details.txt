About the App:
    • The user can enter in a search term to find articles from The Guardian newspaper that are related to that term. For example, load https://content.guardianapis.com/search?api-key=1fb36b70-1588-4259-b703-2570ea1fac6a&q=Tesla to find articles related to Tesla cars.
    • The results should be loaded in a list of results. Clicking on an entry should show Title, URL, and the Section name. Clicking on the URL should load the url in the built-in android web browser.
    • The user should be able to save articles to a list of favourites for later viewing. From the list of favourites saved, the user should be able to delete items from the list. Selecting an item from favourites should then show the saved information, as well as the link to go the article.
Tasks:
    1. The App must have a ListView. Selecting an item from the ListView must show detailed information about the item selected.
    2. The app must have at least 1 progress bar and at least 1 button.
    3. The app must have at least 1 edit text with appropriate text input method and at least 1 Toast and 1 Snackbar.
    4. The app must have at least 4 or more activities. The activity must be accessible by selecting a graphical icon from a Toolbar, and NavigationDrawer. The top navigation layout should have the Activity’s title, and a version number.
    5. The app must use a fragment somewhere in its graphical interface.
    6. Each activity must have a help menu item that displays an AlertDialog with instructions for how to use the interface.
    7. There must be the second language supported by all the activities. Choose French.
    8. The items listed in the ListView must be stored by the application so that they appear the next time the application is launched. The user must be able to add and delete items, which would then also be stored in a database.
    9. When retrieving data from an http server, the activity must use an AsyncTask.
    10. The project must use SharedPreferences to save something about the application for use the next time the application is launched.
    11. The interfaces must look professional, with GUI elements properly laid out and aligned.
    12. The functions and variables written must be properly documented using JavaDoc comments.
    13. Brief professional documentation of the app.


Nov 26th: 1,2,3
Dec 3th: 4,6,7,9,12
Dec 9th: 5,8,10,11,12,13
